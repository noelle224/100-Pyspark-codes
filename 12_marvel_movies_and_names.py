# -*- coding: utf-8 -*-
"""12. Marvel movies and names

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hIu-vTnzlrHZnQItey_HOKtW-pR8Y-l_
"""

from pyspark.sql import SparkSession
spark = SparkSession.builder.appName('Marvelratings').getOrCreate()

"""Given a text file, find the most popular movie, extract schema and the data from the text file.




"""

class Solution:
  def __init__(self):
    self.pathgraph = '/content/Marvel+Graph'
    self.pathnames = '/content/Marvel+Names'

  def readcsv(self):
    df = spark.read.text(self.pathgraph)
    return df

  def interpret(df):
    from pyspark.sql.functions import split, explode
    df = df.withColumn('movieid', explode(split(df.value, ' ')))
    df = df.drop('value')
    df = df.groupBy('movieid').count()
    return df

  def readnames(self):
    df = spark.read.text(self.pathnames)
    return df

  def interpretnames(df):
    from pyspark.sql.functions import split, explode, col, regexp_extract
    df = df.withColumn("id", regexp_extract(col("value"), r'^(\d+)\s+"(.*?)"$', 1))
    df = df.withColumn("names", regexp_extract(col("value"), r'^(\d+)\s+"(.*?)"$', 2))
    df = df.drop('value')
    return df


Ind_obj = Solution()
graphdf = Ind_obj.readcsv()
moviesdf = Ind_obj.readnames()
graphdf = Solution.interpret(graphdf)
moviesdf = Solution.interpretnames(moviesdf)

joined_df = graphdf.join(moviesdf, graphdf.movieid == moviesdf.id, 'inner')
joined_df = joined_df.drop('id')
joined_df = joined_df.orderBy('count', ascending=False)
joined_df.show()

